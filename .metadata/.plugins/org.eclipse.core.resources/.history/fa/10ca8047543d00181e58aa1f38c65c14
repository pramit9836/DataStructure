/**
 * 
 */
package com.learning.doubleneded.linekedlist.operations;

/**
 * @author Pramit
 *
 */
public class LinkedListOperations {

	/**
	 * @param args
	 */
	
	Node head;
	Node tail;
	public static void main(String[] args) {
		// TODO Auto-generated method stub
		
		LinkedListOperations linkedListOperations = new LinkedListOperations();
		
		linkedListOperations.pushNodeAtFirst(19);
		linkedListOperations.pushNodeAtFirst(77);
		linkedListOperations.pushNodeAtFirst(56);
		
		linkedListOperations.printListHead();
		System.out.println();
		linkedListOperations.pushNodeAtEnd(34);
		linkedListOperations.pushNodeAtEnd(15);
		
		linkedListOperations.printListHead();
		
		linkedListOperations.deleteNodeAtFirst();
		
		System.out.println();
		linkedListOperations.printListHead();

	}
	
	public boolean pushNodeAtFirst(int data) {
		Node node = new Node(data);
		if(head != null) {
			node.setNext(head);
			head = node;
		}else {
			head = node;
			tail = node;
		}
		
		return true;
	}
	
	public boolean pushNodeAtEnd(int data) {

		Node node = new Node(data);
		if(tail != null) {
			tail.setNext(node);
			tail = node;
		}else {
			head = node;
			tail = node;
		}
		return true;
	}
	
	public boolean deleteNodeAtFirst() {
		
		if(head != null) {
			Node nextHead = head.getNext();
			head = null;
			head = nextHead;
			return true;
		}
		return false;
		
	}
	
	public void printListHead() {
		Node current = head;
		while (current != null) {
			System.out.println(current.getData());
			current = current.getNext();
		}
	}

}
